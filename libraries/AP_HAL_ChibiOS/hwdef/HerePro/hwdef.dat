# hw definition file for processing by chibios_hwdef.py
# for H743 bootloader

# MCU class and specific type
MCU STM32H7xx STM32H743xx

# USB setup
USB_VENDOR 0x2DAE # ONLY FOR USE BY HEX! NOBODY ELSE
USB_PRODUCT 0x1016
USB_STRING_MANUFACTURER "Hex/ProfiCNC"
USB_STRING_PRODUCT "HerePro"
USB_STRING_SERIAL  "%SERIAL%"

# setup build for a peripheral firmware
env AP_PERIPH 1

# crystal frequency
OSCILLATOR_HZ 24000000

# board ID for firmware load
APJ_BOARD_ID 140

FLASH_SIZE_KB 2048

# bootloader is installed at zero offset
FLASH_RESERVE_START_KB 0

# the location where the bootloader will put the firmware
# the H743 has 128k sectors
FLASH_BOOTLOADER_LOAD_KB 128

PB15 LED_2 OUTPUT LOW
PB14 LED OUTPUT LOW

# board voltage
STM32_VDD 330U

# order of UARTs (and USB)
UART_ORDER OTG1 USART3 UART7 OTG2

define HAL_SERIAL0_BAUD_DEFAULT 57600

# USART3 F9
PD9 USART3_RX USART3 
PD8 USART3_TX USART3 NODMA

# UART7 F9
PE7 UART7_RX UART7 
PE8 UART7_TX UART7 NODMA


PA11 OTG_FS_DM OTG1
PA12 OTG_FS_DP OTG1

PA13 JTMS-SWDIO SWD
PA14 JTCK-SWCLK SWD





###########################
FLASH_RESERVE_START_KB 128


define HAL_BARO_ALLOW_INIT_NO_BARO
                                    
#define HAL_USE_ADC TRUE
#define STM32_ADC_USE_ADC1 TRUE
#define HAL_DISABLE_ADC_DRIVER FALSE
#define HAL_NO_GPIO_IRQ
                            
# avoid RCIN thread to save memory                          
define HAL_NO_RCIN_THREAD

#define HAL_USE_RTC FALSE
define DISABLE_SERIAL_ESC_COMM TRUE
#define NO_DATAFLASH TRUE

define DMA_RESERVE_SIZE 0

define PERIPH_FW TRUE

define HAL_DISABLE_LOOP_DELAY

#define HAL_USE_CAN TRUE
#define STM32_CAN_USE_CAN1 TRUE
# start with a fixed node ID so the board is usable without DNA
define HAL_CAN_DEFAULT_NODE_ID 116

define CAN_APP_NODE_NAME "org.ardupilot.herepro"

define CH_DBG_ENABLE_STACK_CHECK TRUE

define HAL_NO_GCS
define HAL_NO_LOGGING
define HAL_NO_MONITOR_THREAD

define HAL_MINIMIZE_FEATURES 0

define HAL_BUILD_AP_PERIPH

#define HAL_DEVICE_THREAD_STACK 768

define AP_PARAM_MAX_EMBEDDED_PARAM 0

define HAL_BARO_ALLOW_INIT_NO_BARO

# store parameters in pages 2 and 3
#define STORAGE_FLASH_PAGE 2
#define HAL_STORAGE_SIZE 8192
#define HAL_USE_EMPTY_STORAGE 1
define HAL_STORAGE_SIZE 16384

define SERIAL_BUFFERS_SIZE 512

# disable dual GPS and GPS blending to save flash space
define GPS_MAX_RECEIVERS 1
define GPS_MAX_INSTANCES 1
define HAL_COMPASS_MAX_SENSORS 1

# GPS+MAG
define HAL_PERIPH_ENABLE_GPS
define HAL_PERIPH_ENABLE_MAG

# use the app descriptor needed by MissionPlanner for CAN upload
env APP_DESCRIPTOR MissionPlanner

# enable CAN support
PB8 CAN1_RX CAN1
PB9 CAN1_TX CAN1
PB5 CAN2_RX CAN2
PB6 CAN2_TX CAN2
#PB5 GPIO_CAN1_SILENT OUTPUT PUSHPULL SPEED_LOW LOW
#define HAL_USE_CAN TRUE
#define STM32_CAN_USE_CAN1 TRUE
#define STM32_CAN_USE_CAN2 TRUE

#PA4 MAG_CS CS
PA4 MPU_CS CS
PA5 SPI1_SCK SPI1
PA6 SPI1_MISO SPI1
PA7 SPI1_MOSI SPI1
SPIDEV icm20948       SPI1 DEVID4  MPU_CS       MODE3  4*MHZ  8*MHZ

IMU Invensensev2 SPI:icm20948 ROTATION_YAW_270

define HAL_DEFAULT_INS_FAST_SAMPLE 5

# compass as part of ICM20948 on newer cubes
COMPASS AK09916:probe_ICM20948 0 ROTATION_ROLL_180_YAW_90

# one baro
#BARO MS56XX I2C:0:0x77

PE4 MPU_EXT_CS CS
PE2 SPI4_SCK  SPI4
PE5 SPI4_MISO SPI4
PE6 SPI4_MOSI SPI4


PG15 spi6cs CS
PG13 SPI6_SCK  SPI6
PG12 SPI6_MISO SPI6
PG14 SPI6_MOSI SPI6

PF7 SPI5_SCK  SPI5
PF9 SPI5_MOSI SPI5

# Now setup the pins for the microSD card, if available.
PC8 SDMMC1_D0 SDMMC1
PC9 SDMMC1_D1 SDMMC1
PC10 SDMMC1_D2 SDMMC1
PC11 SDMMC1_D3 SDMMC1
PC12 SDMMC1_CK SDMMC1
PD2 SDMMC1_CMD SDMMC1

define BOARD_PWM_COUNT_DEFAULT 0
define BOARD_SER1_RTSCTS_DEFAULT 0

define HAL_OS_FATFS_IO 1
define HAL_WITH_UAVCAN 1
env HAL_WITH_UAVCAN 1
define HAL_PICCOLO_CAN_ENABLE 0
define AP_UAVCAN_SLCAN_ENABLED 1

PA1 BATT_VOLTAGE_SENS ADC1 SCALE(1)
PA2 BATT_CURRENT_SENS ADC1 SCALE(1)

#gps f9
PD10 F91 INPUT 
PD11 F92 INPUT
PD13 F93 INPUT 
PD14 F94 INPUT 
PD15 F95 INPUT 
PG2 F97 INPUT 
PG3 F96 INPUT 
PD4 RTKSTAT INPUT
PD5 GEOFENCESTAT INPUT

#others
#PH13 VDD_5V_SENS ADC1 SCALE(2)
PG10 can2int INPUT 
PG11 can2sleep OUTPUT PUSHPULL SPEED_LOW LOW 
PF1 GNDDET2 INPUT
PF2 GNDDET1 INPUT
PC6 EXTERN_GPIO1 OUTPUT GPIO(1)
PC7 EXTERN_GPIO2 OUTPUT GPIO(2)
PC0 SENSEN OUTPUT HIGH
PB1 IMUINT INPUT
PB3 QCAN2TERM OUTPUT HIGH 
PB4 QCAN2INT0 INPUT
PC13 QCAN1SLEEP OUTPUT PUSHPULL SPEED_LOW LOW 
PE0 QCAN1INT INPUT
PE1 QCAN1INT0 INPUT
PE3 QCAN1INT1 INPUT

PD6 QCAN1TERM OUTPUT HIGH 
PD7 QCAN2INT1 INPUT
PA8 QCAN12OSC1 INPUT

# This defines more ADC inputs.
PC3 AUX_POWER ADC1 SCALE(1)
PC4 AUX_ADC2 ADC1 SCALE(1)

# This input pin is used to detect that power is valid on USB.
PA9 VBUS_VALID INPUT


# This defines some input pins, currently unused.
PB2 BOOT1 INPUT

# reserve 256 bytes for comms between app and bootloader
RAM_RESERVE_START 256
